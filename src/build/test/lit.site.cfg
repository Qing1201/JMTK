# -*- Python -*-

# Configuration file for the 'lit' test runner.
import os, sys, re, subprocess, glob

config.target_triple = "X86"

runcmd = 'python %s --preformatted-image %s' % (
    os.path.join('/home/james/Code/new-tutorials/src', '..', 'scripts', 'run.py'),
    os.path.join('/home/james/Code/new-tutorials/src', 'floppy.img.zip')
)

srcs = set("hal.c;main.c;string.c;console.c;hal.c;/home/james/Code/new-tutorials/src/build/x86/bringup-1.s.o;x86/bringup-2.c;x86/screen.c;x86/keyboard.c".split(';'))
objs = []
for s in srcs:
    if s[0] == '/':
        # Absolute path, leave well alone.
        objs.append(s)
    else:
        objs.append(os.path.abspath("CMakeFiles/kernel.dir/%s.o" % s))

if "Debug" == "Debug":
    flags = "-g"
if "Debug" == "Release":
    flags = "-O3 -DNDEBUG"
if "Debug" == "MinSizeRel":
    flags = "-Os -DNDEBUG"
if "Debug" == "RelWithDebInfo":
    flags = "-O2 -g"

defs = "-DX86;-m32;-ffreestanding;-Wall;-Wextra;-Wno-unused-parameter;-std=c99;-nostdlibinc;-fno-builtin".split(';')
incs = ["-I"+i for i in "/home/james/Code/new-tutorials/src/include;/home/james/Code/new-tutorials/src/build".split(';')]

cmd = "/usr/bin/gcc %s %s   -T/home/james/Code/new-tutorials/src/x86/link.ld -nostdlibinc -nostdlib -m32 -Xlinker --build-id=none %s" % (
    flags, ' '.join(defs+incs), ' '.join(objs))

config.substitutions.append( ('%run', runcmd) )
config.substitutions.append( ('%compile', cmd) )
config.substitutions.append( ('%FileCheck', os.path.join(config.test_source_root,
                                                        'FileCheck')) )
